service: hits-data-display-api

provider:
  name: aws
  runtime: nodejs12.x
  profile: ${env:AWS_PROFILE}
  region: ${env:REGION}
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: arn:aws:lambda:*:*:*
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:Query
        - dynamodb:DeleteItem
      Resource:
        - arn:aws:dynamodb:ap-southeast-2:972124391741:table/hitsConnections
        - arn:aws:dynamodb:ap-southeast-2:972124391741:table/hitsEventData
        - arn:aws:dynamodb:ap-southeast-2:972124391741:table/hitsGames
    - Effect: Allow
      Action:
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:ListStreams
      Resource:
        - ${env:HITS_EVENT_STREAM_ARN}

functions:
  get-game-data:
    handler: src/getGameDataHandler.getGameDataHandler
    events:
      - http:
          path: "/hits-event"
          method: get
          cors: true

  get-games:
    handler: src/getGamesHandler.getGamesHandler
    events:
      - http:
          path: "/hits-games"
          method: get
          cors: true
  connection-manager:
    handler: src/websocket/connectionManager.connectionManager
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
  default-message:
    handler: src/websocket/defaultMessage.defaultMessage
    events:
      - websocket:
          route: $default
  stream:
    handler: src/websocket/eventsStreamHandler.eventsStreamHandler
    events:
      - stream: ${env:HITS_EVENT_STREAM_ARN}
